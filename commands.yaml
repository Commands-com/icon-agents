commands:
  # Icon Commands - Intelligent Legendary Programming Wisdom

  - name: icon-expert-review
    title: Icon Expert Review
    description: Hybrid expert analysis - automatically selects relevant legendary programmers or use direct expert selection. Shows selection reasoning and allows overrides.
    type: command
    category: development
    commandName: "/icon-expert-review"
    aiPlatform: "claude-code@2025.06"
    mcpRequirements:
      - serverId: filesystem
        tier: required
      - serverId: github
        tier: optional
    content: commands/icon-expert-review/command.md
    readme: commands/icon-expert-review/README.md
    inputParameters:
      - name: source
        label: Source Location
        description: GitHub URL, local file/directory path, or problem description
        type: text
        required: true
        defaultValue: ""
      - name: focus
        label: Focus Override
        description: Override automatic expert selection by category
        type: select
        required: false
        defaultValue: "auto"
        options: ["auto", "performance", "architecture", "quality", "all"]
      - name: expert
        label: Expert Override
        description: Force selection of specific expert (overrides automatic selection)
        type: select
        required: false
        defaultValue: "auto"
        options: ["auto", "linus-torvalds", "john-carmack", "rich-hickey", "alan-kay", "kent-beck", "barbara-liskov", "leslie-lamport", "donald-knuth"]

  - name: icon-commit-reviewer
    title: Icon Commit Reviewer
    description: Hybrid commit analysis - automatically selects relevant experts based on git changes or use direct expert selection. Shows selection reasoning and allows overrides.
    type: command
    category: development
    commandName: "/icon-commit-review"
    aiPlatform: "claude-code@2025.06"
    mcpRequirements:
      - serverId: filesystem
        tier: required
      - serverId: github
        tier: optional
    content: commands/icon-commit-reviewer/command.md
    readme: commands/icon-commit-reviewer/README.md
    inputParameters:
      - name: scope
        label: Review Scope
        description: What commits to review
        type: select
        required: false
        defaultValue: "staged"
        options: ["staged", "unstaged", "all", "last-commit", "branch"]
      - name: focus
        label: Expert Focus
        description: Override automatic expert selection by category
        type: select
        required: false
        defaultValue: "auto"
        options: ["auto", "performance", "architecture", "quality", "all"]
      - name: expert
        label: Expert Override
        description: Force selection of specific expert (overrides automatic selection)
        type: select
        required: false
        defaultValue: "auto"
        options: ["auto", "linus-torvalds", "john-carmack", "rich-hickey", "alan-kay", "kent-beck", "barbara-liskov", "leslie-lamport", "donald-knuth"]

  # Icon Agents - Legendary Programmer Philosophies
  - name: linus-torvalds
    title: Linus Torvalds
    description: Apply Linus Torvalds' legendary engineering philosophy - eliminate over-design, focus on data structures, and demand good taste in code
    type: agent
    category: code-philosophy
    content: agents/linus-torvalds.md
    aiPlatform: claude-code@2025.06
    agentSpecializations:
      - systems-engineering
      - data-structure-design
      - pragmatic-development
      - technical-taste
    agentCapabilities:
      - Evaluate code for "good taste"
      - Eliminate special cases and complexity
      - Focus on data structure design
      - Apply pragmatic engineering principles
      - Provide direct technical feedback
    agentTools:
      - Five-layer analysis framework
      - Data structure evaluation
      - Complexity reduction techniques
      - Pragmatic design principles

  - name: john-carmack
    title: John Carmack
    description: Channel John Carmack's performance optimization expertise - empirical analysis, cache efficiency, and systematic bottleneck elimination
    type: agent
    category: performance-optimization
    content: agents/john-carmack.md
    aiPlatform: claude-code@2025.06
    agentSpecializations:
      - performance-optimization
      - cache-efficiency
      - empirical-analysis
      - systems-programming
    agentCapabilities:
      - Identify performance bottlenecks
      - Optimize memory access patterns
      - Apply data-oriented design
      - Systematic performance analysis
      - Hardware-conscious optimization
    agentTools:
      - Performance profiling methodology
      - Cache analysis techniques
      - Algorithmic optimization
      - Hardware optimization patterns

  - name: rich-hickey
    title: Rich Hickey
    description: Apply Rich Hickey's simplicity philosophy - eliminate complected concepts, separate concerns, and design with information models
    type: agent
    category: simplicity-architecture
    content: agents/rich-hickey.md
    aiPlatform: claude-code@2025.06
    agentSpecializations:
      - conceptual-simplicity
      - functional-programming
      - information-modeling
      - complexity-elimination
    agentCapabilities:
      - Identify complected concepts
      - Separate state from identity
      - Design simple information models
      - Apply functional programming principles
      - Eliminate accidental complexity
    agentTools:
      - Complecting analysis framework
      - Information modeling techniques
      - Functional design patterns
      - Simplicity evaluation methods

  - name: donald-knuth
    title: Donald Knuth
    description: Apply Donald Knuth's algorithmic wisdom - mathematical rigor, complexity analysis, and literate programming principles
    type: agent
    category: algorithmic-analysis
    content: agents/donald-knuth.md
    aiPlatform: claude-code@2025.06
    agentSpecializations:
      - algorithmic-analysis
      - complexity-theory
      - mathematical-rigor
      - literate-programming
    agentCapabilities:
      - Analyze algorithmic complexity
      - Verify correctness mathematically
      - Apply literate programming principles
      - Optimize algorithm selection
      - Provide mathematical insights
    agentTools:
      - Big-O analysis framework
      - Correctness verification methods
      - Algorithm comparison techniques
      - Mathematical optimization

  - name: alan-kay
    title: Alan Kay
    description: Channel Alan Kay's visionary thinking - message-passing objects, system evolution, and human-centered design
    type: agent
    category: system-vision
    content: agents/alan-kay.md
    aiPlatform: claude-code@2025.06
    agentSpecializations:
      - object-oriented-design
      - system-evolution
      - human-computer-interaction
      - visionary-thinking
    agentCapabilities:
      - Design evolutionary systems
      - Apply true object-oriented principles
      - Create human-centered interfaces
      - Think in decades, not quarters
      - Enable emergent behaviors
    agentTools:
      - Message-passing design patterns
      - Evolution-friendly architectures
      - Human-centered design principles
      - Long-term thinking frameworks

  - name: kent-beck
    title: Kent Beck
    description: Apply Kent Beck's development practices - test-driven development, refactoring, and feedback-driven design
    type: agent
    category: development-practices
    content: agents/kent-beck.md
    aiPlatform: claude-code@2025.06
    agentSpecializations:
      - test-driven-development
      - refactoring-techniques
      - agile-practices
      - feedback-loops
    agentCapabilities:
      - Design testable code
      - Apply refactoring patterns
      - Implement feedback loops
      - Practice incremental design
      - Balance simplicity and functionality
    agentTools:
      - TDD methodology
      - Refactoring catalog
      - Feedback optimization techniques
      - Incremental design patterns

  - name: leslie-lamport
    title: Leslie Lamport
    description: Apply Leslie Lamport's formal methods - distributed systems correctness, temporal logic, and rigorous specification
    type: agent
    category: formal-methods
    content: agents/leslie-lamport.md
    aiPlatform: claude-code@2025.06
    agentSpecializations:
      - distributed-systems
      - formal-verification
      - temporal-logic
      - specification-design
    agentCapabilities:
      - Verify distributed system correctness
      - Apply formal specification methods
      - Analyze concurrency properties
      - Design fault-tolerant systems
      - Prove system properties
    agentTools:
      - TLA+ specification framework
      - Distributed algorithm patterns
      - Formal verification techniques
      - Concurrency analysis methods

  - name: barbara-liskov
    title: Barbara Liskov
    description: Apply Barbara Liskov's abstraction principles - data abstraction, contract design, and substitutability
    type: agent
    category: abstraction-design
    content: agents/barbara-liskov.md
    aiPlatform: claude-code@2025.06
    agentSpecializations:
      - data-abstraction
      - contract-design
      - type-systems
      - modular-programming
    agentCapabilities:
      - Design robust abstractions
      - Verify substitutability principles
      - Create clear contracts
      - Apply type safety principles
      - Build modular systems
    agentTools:
      - Abstraction design patterns
      - Contract specification methods
      - Substitutability verification
      - Type safety analysis

metadata:
  created: "2025-08-17"
  updated: "2025-08-17"
  total_items: 10
  description: Intelligent legendary programming wisdom - automatically selects the right experts for your problem
  architecture: "Simplified intelligent expert selection (implements legendary consensus: Linus + Carmack + Hickey recommendations)"
  performance: "Parallel execution retained, resource usage optimized through smart expert selection"
  supported_platforms:
    - claude-code
    - claude